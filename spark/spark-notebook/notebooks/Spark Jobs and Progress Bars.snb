{
  "metadata" : {
    "name" : "Spark Jobs and Progress Bars",
    "user_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "auto_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "language_info" : {
      "name" : "scala",
      "file_extension" : "scala",
      "codemirror_mode" : "text/x-scala"
    },
    "trusted" : true,
    "customLocalRepo" : null,
    "customRepos" : null,
    "customDeps" : null,
    "customImports" : [ "import scala.concurrent._", "import scala.concurrent.ExecutionContext.Implicits.global" ],
    "customArgs" : null,
    "customSparkConf" : {
      "spark.scheduler.mode" : "FAIR"
    }
  },
  "cells" : [ {
    "metadata" : {
      "id" : "C727D048F0EC486980D95FB1DF3F9265"
    },
    "cell_type" : "markdown",
    "source" : "# Check several jobs under FAIR scheduler condition"
  }, {
    "metadata" : {
      "id" : "A124B0190B7141DC876EBFB435A3C300"
    },
    "cell_type" : "markdown",
    "source" : "Using Fair scheduler to schedule more than one job's tasks at a given time."
  }, {
    "metadata" : {
      "id" : "E75BC550A28049DA8B627474C6864CEE"
    },
    "cell_type" : "markdown",
    "source" : "## Setup"
  }, {
    "metadata" : {
      "id" : "657F450DB89240B6857872283FFFB6AB"
    },
    "cell_type" : "markdown",
    "source" : "We create a dummy dataset"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "48DD0598412C4D8A836F9B77F9F07C73"
    },
    "cell_type" : "code",
    "source" : "val rdd = sparkContext.parallelize(1 to 10000)",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "C10F876976D14F238F230A863259DDAE"
    },
    "cell_type" : "code",
    "source" : "rdd.count",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "40E763EE0CD542C1AAC1CCC0E08CF337"
    },
    "cell_type" : "markdown",
    "source" : "## Parallel jobs (using `Future`)"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "0D3EF683E4554B069B6AB34EE81BF647"
    },
    "cell_type" : "code",
    "source" : "rdd.mapPartitions{ x => Thread.sleep(scala.util.Random.nextInt(10000)); x}.count",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "538194BF7AF045B3819FC5CE4E9E4DC8"
    },
    "cell_type" : "code",
    "source" : "Future{ rdd.mapPartitions{ x => Thread.sleep(scala.util.Random.nextInt(10000)); x}.count }",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "FC54BDE1C9944D0E9184524C0C7816C1"
    },
    "cell_type" : "code",
    "source" : "Future{ \n  rdd.mapPartitions{ x => Thread.sleep(scala.util.Random.nextInt(10000)); x}\n   .count\n}",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "BFF35D7A45B0472DADBCD83CE6EDBA8A"
    },
    "cell_type" : "code",
    "source" : "Future{ \n  rdd.repartition(12).mapPartitions{ x => Thread.sleep(scala.util.Random.nextInt(10000)); x}\n     .count\n}",
    "outputs" : [ ]
  } ],
  "nbformat" : 4
}